{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../login.service\";\nexport class LoginComponent {\n  constructor(loginService) {\n    this.loginService = loginService;\n    this.users = [];\n    this.username = '';\n  }\n  //we need a function that gets the name of what is entered into the box. This will be sent to the backend to check\n  //if the name is an admin or a customer\n  getUsername(username) {\n    //this.productService.getProducts()\n    //.subscribe(cart => this.cart= cart);\n    this.username = username;\n  }\n  add(username) {\n    username = username.trim();\n    if (!username) {\n      return;\n    }\n    this.loginService.addUser({\n      username\n    }).subscribe(hero => {\n      this.users.push(hero);\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 9,\n  vars: 0,\n  consts: [[\"for\", \"new-user\"], [\"id\", \"new-user\"], [\"userName\", \"\"], [\"type\", \"button\", 1, \"add-button\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Login:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"label\", 0);\n      i0.ɵɵtext(4, \"Username: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 1, 2);\n      i0.ɵɵelementStart(7, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_7_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(6);\n        ctx.add(_r0.value);\n        return i0.ɵɵresetView(_r0.value = \"\");\n      });\n      i0.ɵɵtext(8, \" Add User \");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,cAAc;EAKzBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAHhC,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAU,EAAE;EAE4B;EAEhD;EACA;EAEAC,WAAW,CAACC,QAAgB;IAC1B;IACA;IACA,IAAI,CAACA,QAAQ,GAAEA,QAAQ;EACzB;EAEAC,GAAG,CAACD,QAAgB;IAClBA,QAAQ,GAAGA,QAAQ,CAACE,IAAI,EAAE;IAC1B,IAAI,CAACF,QAAQ,EAAE;MAAE;;IACjB,IAAI,CAACF,YAAY,CAACK,OAAO,CAAC;MAAEH;IAAQ,CAAW,CAAC,CAC7CI,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACC,KAAK,CAACC,IAAI,CAACF,IAAI,CAAC;IACvB,CAAC,CAAC;EACN;;AAvBWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCT3BC,0BAAI;MAAAA,sBAAM;MAAAA,iBAAK;MACfA,2BAAK;MACqBA,0BAAU;MAAAA,iBAAQ;MACxCA,8BAAiC;MAGjCA,iCAA0F;MAAjDA;QAAAA;QAAA;QAASC,kBAAmB;QAAA,OAAED,2BAAe,EAAE;MAAA,EAAC;MACvFA,0BACF;MAAAA,iBAAS","names":["LoginComponent","constructor","loginService","getUsername","username","add","trim","addUser","subscribe","hero","users","push","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/jackmigely/team-project-2225-swen-261-03-g-team0/estore-ui/src/app/login/login.component.ts","/Users/jackmigely/team-project-2225-swen-261-03-g-team0/estore-ui/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Login } from '../login';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  users: Login[]= [];\n  username: string= '';\n\n  constructor(private loginService: LoginService){}\n\n  //we need a function that gets the name of what is entered into the box. This will be sent to the backend to check\n  //if the name is an admin or a customer\n\n  getUsername(username: string): void{\n    //this.productService.getProducts()\n    //.subscribe(cart => this.cart= cart);\n    this.username= username;\n  }\n\n  add(username: string): void {\n    username = username.trim();\n    if (!username) { return; }\n    this.loginService.addUser({ username } as Login)\n      .subscribe(hero => {\n        this.users.push(hero);\n      });\n  }\n}\n\n","<h2>Login:</h2>\n<div>\n    <label for=\"new-user\">Username: </label>\n    <input id=\"new-user\" #userName />\n  \n    <!-- (click) passes input value to add() and then clears the input -->\n    <button type=\"button\" class=\"add-button\" (click)=\"add(userName.value); userName.value=''\">\n      Add User\n    </button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}